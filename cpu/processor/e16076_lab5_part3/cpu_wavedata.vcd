$date
	Sun May 10 22:06:54 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var reg 1 " CLK $end
$var reg 32 # INSTRUCTION [31:0] $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 " CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 & WRITEENABLE $end
$var wire 8 ' TWOSCOMP [7:0] $end
$var wire 1 ( SUBMUXSEL $end
$var wire 8 ) RESULT [7:0] $end
$var wire 8 * REGOUT2 [7:0] $end
$var wire 8 + REGOUT1 [7:0] $end
$var wire 8 , OPERAND1 [7:0] $end
$var wire 8 - NONIMMEDIATE [7:0] $end
$var wire 1 . IMMUXSEL $end
$var wire 3 / ALUOP [2:0] $end
$var reg 8 0 DESTINATION [7:0] $end
$var reg 8 1 OPCODE [7:0] $end
$var reg 32 2 PC [31:0] $end
$var reg 3 3 READREG1 [2:0] $end
$var reg 3 4 READREG2 [2:0] $end
$var reg 8 5 SOURCE1 [7:0] $end
$var reg 8 6 SOURCE2 [7:0] $end
$var reg 8 7 STORE [7:0] $end
$var reg 3 8 WRITEREG [2:0] $end
$scope module alupart $end
$var wire 3 9 SELECT [0:2] $end
$var wire 8 : DATA2 [0:7] $end
$var wire 8 ; DATA1 [0:7] $end
$var reg 8 < RESULT [0:7] $end
$upscope $end
$scope module control $end
$var wire 8 = OPCODE [7:0] $end
$var reg 3 > ALUOP [2:0] $end
$var reg 1 . IMMUXSEL $end
$var reg 1 ( SUBMUXSEL $end
$var reg 1 & WRITEENABLE $end
$upscope $end
$scope module muximmediate $end
$var wire 8 ? IMMEDIATE [7:0] $end
$var wire 1 . IMMUXSEL $end
$var wire 8 @ NONIMMEDIATE [7:0] $end
$var reg 8 A OPERAND1 [7:0] $end
$upscope $end
$scope module muxsubtract $end
$var wire 1 ( SUBMUXSEL $end
$var wire 8 B TWOSCOMP [7:0] $end
$var wire 8 C REGOUT2 [7:0] $end
$var reg 8 D NONIMMEDIATE [7:0] $end
$upscope $end
$scope module mytwoscomplement $end
$var wire 8 E REGOUT2 [7:0] $end
$var reg 8 F TWOSCOMP [7:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 " CLK $end
$var wire 8 G IN [7:0] $end
$var wire 3 H INADDRESS [2:0] $end
$var wire 3 I OUT1ADDRESS [2:0] $end
$var wire 3 J OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 & WRITE $end
$var reg 8 K OUT1 [7:0] $end
$var reg 8 L OUT2 [7:0] $end
$var integer 32 M i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
x.
bx -
bx ,
bx +
bx *
bx )
x(
bx '
x&
bx %
1$
bx #
1"
bx !
$end
#1
b11111111111111111111111111111100 !
b11111111111111111111111111111100 2
#2
b1000 M
0$
#3
b0 7
#5
0"
#10
1"
#11
b0 !
b0 2
#13
b101 4
b101 J
b0 3
b0 I
b1 8
b1 H
b0 1
b0 =
b1 0
b0 5
b101 6
b101 ?
b100 7
b10000000000000101 #
b10000000000000101 %
#14
b101 ,
b101 :
b101 A
1.
0(
1&
b0 /
b0 9
b0 >
#15
b0 -
b0 @
b0 D
b0 '
b0 B
b0 F
b101 )
b101 <
b101 G
b0 *
b0 C
b0 E
b0 L
b0 +
b0 ;
b0 K
0"
#20
1"
#21
b100 !
b100 2
#23
b1 ,
b1 :
b1 A
b1 4
b1 J
b111 8
b111 H
b1 1
b1 =
b111 0
b1 6
b1 ?
b1000001110000000000000001 #
b1000001110000000000000001 %
b1000 7
#24
b0 ,
b0 :
b0 A
b1 )
b1 <
b1 G
0.
#25
b101 ,
b101 :
b101 A
b101 -
b101 @
b101 D
b11111011 '
b11111011 B
b11111011 F
b0 )
b0 <
b0 G
b101 *
b101 C
b101 E
b101 L
0"
#26
b101 )
b101 <
b101 G
#30
1"
#31
b1000 !
b1000 2
#33
b111 4
b111 J
b10 8
b10 H
b0 1
b0 =
b10 0
b111 6
b111 ?
b1100 7
b100000000000000111 #
b100000000000000111 %
#34
b111 ,
b111 :
b111 A
1.
#35
b111 )
b111 <
b111 G
0"
#40
1"
#41
b1100 !
b1100 2
#42
1$
#43
b10 ,
b10 :
b10 A
b10 4
b10 J
b110 8
b110 H
b1 1
b1 =
b110 0
b10 6
b10 ?
b11111111111111111111111111111100 !
b11111111111111111111111111111100 2
b1000001100000000000000010 #
b1000001100000000000000010 %
b10000 7
#44
b101 ,
b101 :
b101 A
b10 )
b10 <
b10 G
0.
b1000 M
0$
#45
b0 ,
b0 :
b0 A
b0 -
b0 @
b0 D
b0 '
b0 B
b0 F
bx 4
bx J
bx 3
bx I
bx 8
bx H
bx 1
bx =
bx 0
bx 5
bx 6
bx ?
b101 )
b101 <
b101 G
b0 *
b0 C
b0 E
b0 L
b0 7
bx #
bx %
0"
#46
b0 )
b0 <
b0 G
0&
bx /
bx 9
bx >
#47
bx ,
bx :
bx A
bx -
bx @
bx D
bx '
bx B
bx F
bx )
bx <
bx G
bx *
bx C
bx E
bx L
bx +
bx ;
bx K
#50
1"
#51
b0 !
b0 2
#53
b101 4
b101 J
b0 3
b0 I
b1 8
b1 H
b0 1
b0 =
b1 0
b0 5
b101 6
b101 ?
b10000000000000101 #
b10000000000000101 %
b100 7
#54
b101 ,
b101 :
b101 A
1.
1&
b0 /
b0 9
b0 >
#55
b0 -
b0 @
b0 D
b0 '
b0 B
b0 F
b101 )
b101 <
b101 G
b0 *
b0 C
b0 E
b0 L
b0 +
b0 ;
b0 K
0"
#60
1"
#61
b100 !
b100 2
#63
b1 ,
b1 :
b1 A
b1 4
b1 J
b111 8
b111 H
b1 1
b1 =
b111 0
b1 6
b1 ?
b1000 7
b1000001110000000000000001 #
b1000001110000000000000001 %
#64
b0 ,
b0 :
b0 A
b1 )
b1 <
b1 G
0.
#65
b101 ,
b101 :
b101 A
b101 -
b101 @
b101 D
b11111011 '
b11111011 B
b11111011 F
b0 )
b0 <
b0 G
b101 *
b101 C
b101 E
b101 L
0"
#66
b101 )
b101 <
b101 G
#70
1"
#71
b1000 !
b1000 2
#73
b111 4
b111 J
b10 8
b10 H
b0 1
b0 =
b10 0
b111 6
b111 ?
b100000000000000111 #
b100000000000000111 %
b1100 7
#74
b111 ,
b111 :
b111 A
1.
#75
b111 )
b111 <
b111 G
0"
#80
1"
#81
b1100 !
b1100 2
#83
b10 ,
b10 :
b10 A
b10 4
b10 J
b110 8
b110 H
b1 1
b1 =
b110 0
b10 6
b10 ?
b10000 7
b1000001100000000000000010 #
b1000001100000000000000010 %
#84
b101 ,
b101 :
b101 A
b10 )
b10 <
b10 G
0.
#85
b111 ,
b111 :
b111 A
b111 -
b111 @
b111 D
b11111001 '
b11111001 B
b11111001 F
b101 )
b101 <
b101 G
b111 *
b111 C
b111 E
b111 L
0"
#86
b111 )
b111 <
b111 G
#90
1"
#91
b10000 !
b10000 2
#93
b1 3
b1 I
b11 8
b11 H
b10 1
b10 =
b11 0
b1 5
b10000000110000000100000010 #
b10000000110000000100000010 %
b10100 7
#94
b1 /
b1 9
b1 >
#95
b101 +
b101 ;
b101 K
0"
#96
b1100 )
b1100 <
b1100 G
#100
1"
#101
b10100 !
b10100 2
#103
b11 4
b11 J
b0 3
b0 I
b100 8
b100 H
b1 1
b1 =
b100 0
b0 5
b11 6
b11 ?
b11000 7
b1000001000000000000000011 #
b1000001000000000000000011 %
#104
b0 /
b0 9
b0 >
#105
b1100 ,
b1100 :
b1100 A
b1100 -
b1100 @
b1100 D
b11110100 '
b11110100 B
b11110100 F
b111 )
b111 <
b111 G
b1100 *
b1100 C
b1100 E
b1100 L
b0 +
b0 ;
b0 K
0"
#106
b1100 )
b1100 <
b1100 G
#110
1"
#111
b11000 !
b11000 2
#113
bx 4
bx J
bx 3
bx I
bx 8
bx H
bx 1
bx =
bx 0
bx 5
bx 6
bx ?
bx #
bx %
b11100 7
#114
bx )
bx <
bx G
0&
bx /
bx 9
bx >
#115
bx ,
bx :
bx A
bx -
bx @
bx D
bx '
bx B
bx F
bx *
bx C
bx E
bx L
bx +
bx ;
bx K
0"
#120
1"
#121
b11100 !
b11100 2
#123
b100000 7
#125
0"
#130
1"
#131
b100000 !
b100000 2
#133
b100100 7
#135
0"
#140
1"
#141
b100100 !
b100100 2
#143
b101000 7
#145
0"
#150
1"
#151
b101000 !
b101000 2
#153
b101100 7
#155
0"
#160
1"
#161
b101100 !
b101100 2
#163
b110000 7
#165
0"
#170
1"
#171
b110000 !
b110000 2
#173
b110100 7
#175
0"
#180
1"
#181
b110100 !
b110100 2
#183
b111000 7
#184
